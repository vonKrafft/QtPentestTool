# Copyright (c) 2019 vonKrafft <contact@vonkrafft.fr>
# 
# This file is part of QtPentestTool.
# 
# This file may be used under the terms of the GNU General Public License
# version 3.0 as published by the Free Software Foundation and appearing in
# the file LICENSE included in the packaging of this file. Please review the
# following information to ensure the GNU General Public License version 3.0
# requirements will be met: http://www.gnu.org/copyleft/gpl.html.
# 
# This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
# WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.

from PyQt5 import QtCore
from PyQt5 import QtGui
from PyQt5 import QtWidgets

from .. import QtPtObjects

import textwrap


class QCvssLayout(QtWidgets.QFormLayout):

    def __init__(self, *args, **kwargs):
        super(QCvssLayout, self).__init__(*args, **kwargs)

    def addMetric(self, metric):
        metricButtons = dict()

        buttonLayout = QtWidgets.QHBoxLayout()
        buttonLayout.setContentsMargins(0, 0, 0, 0)
        buttonLayout.setSpacing(0)

        buttonWidget = QtWidgets.QWidget()
        buttonWidget.setLayout(buttonLayout)

        for index, metricItem in metric.items():
            metricButtons[metricItem.sid] = QtWidgets.QPushButton(metricItem.title(metric.sid), checkable=True)
            metricButtons[metricItem.sid].setStyleSheet('QPushButton { font-size: 10px; padding: 2px; }')
            metricButtons[metricItem.sid].setToolTip(textwrap.fill(metricItem.help))
            metricButtons[metricItem.sid].setCheckable(True)
            metricButtons[metricItem.sid].setFocusPolicy(QtCore.Qt.NoFocus)
            buttonLayout.addWidget(metricButtons[metricItem.sid])
        buttonLayout.addStretch(1)

        self.addRow(QtWidgets.QLabel(metric.title()), buttonWidget)

        return metricButtons

    def addLabel(self, text):
        self.addRow(QtWidgets.QLabel(text, font=QtGui.QFont('SansSerif', weight=QtGui.QFont.Bold)))