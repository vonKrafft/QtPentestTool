# Copyright (c) 2019 vonKrafft <contact@vonkrafft.fr>
# 
# This file is part of QtPentestTool.
# 
# This file may be used under the terms of the GNU General Public License
# version 3.0 as published by the Free Software Foundation and appearing in
# the file LICENSE included in the packaging of this file. Please review the
# following information to ensure the GNU General Public License version 3.0
# requirements will be met: http://www.gnu.org/copyleft/gpl.html.
# 
# This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
# WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.

from PyQt5 import QtCore
from PyQt5 import QtGui
from PyQt5 import QtWidgets


class QVulnerabilityTabWidget(QtWidgets.QWidget):
    """docstring for QVulnerabilityTabWidget"""

    textChanged = QtCore.pyqtSignal()

    def __init__(self, *args, **kwargs):
        super(QVulnerabilityTabWidget, self).__init__(*args, **kwargs)

        self.layout = QtWidgets.QVBoxLayout(self)
        self.layout.setContentsMargins(0, 0, 0, 0)
        self.setLayout(self.layout)

        # Tabs

        self.descriptionTab = QtWidgets.QWidget()
        self.impactTab = QtWidgets.QWidget()
        self.remediationTab = QtWidgets.QWidget()

        self.tabs = QtWidgets.QTabWidget()
        self.tabs.addTab(self.descriptionTab, 'Description')
        self.tabs.addTab(self.impactTab, 'Impact')
        self.tabs.addTab(self.remediationTab, 'Remediation')

        # Description

        self.descriptionTab.layout = QtWidgets.QVBoxLayout(self)
        self.descriptionInput = QtWidgets.QTextEdit(self)
        self.descriptionInput.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        self.descriptionInput.textChanged.connect(self.__triggerTextChanged)
        self.descriptionTab.layout.addWidget(self.descriptionInput)
        self.descriptionTab.setLayout(self.descriptionTab.layout)

        # Impact

        self.impactTab.layout = QtWidgets.QVBoxLayout(self)
        self.impactInput = QtWidgets.QTextEdit(self)
        self.impactInput.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        self.impactInput.textChanged.connect(self.__triggerTextChanged)
        self.impactTab.layout.addWidget(self.impactInput)
        self.impactTab.setLayout(self.impactTab.layout)

        # Remediation

        self.remediationTab.layout = QtWidgets.QVBoxLayout(self)
        self.remediationInput = QtWidgets.QTextEdit(self)
        self.remediationInput.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        self.remediationInput.textChanged.connect(self.__triggerTextChanged)
        self.remediationTab.layout.addWidget(self.remediationInput)
        self.remediationTab.setLayout(self.remediationTab.layout)

        # QVulnerabilityTabWidget

        self.layout.addWidget(self.tabs)

    def setDescription(self, text):
        self.descriptionInput.setText(text)

    def description(self):
        return self.descriptionInput.toPlainText()

    def setImpact(self, text):
        self.impactInput.setText(text)

    def impact(self):
        return self.impactInput.toPlainText()

    def setRemediation(self, text):
        self.remediationInput.setText(text)

    def remediation(self):
        return self.remediationInput.toPlainText()

    def __triggerTextChanged(self):
        self.textChanged.emit()